<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ijw.Next.IO</name>
    </assembly>
    <members>
        <member name="T:ijw.Next.IO.BatchCopyNotFinishedException">
            <summary>
            批量复制没有完成的异常
            </summary>
        </member>
        <member name="M:ijw.Next.IO.BatchCopyNotFinishedException.#ctor(System.String[],System.String)">
            <summary>
            
            </summary>
            <param name="copied"></param>
            <param name="message"></param>
        </member>
        <member name="P:ijw.Next.IO.BatchCopyNotFinishedException.Copied">
            <summary>
            已经拷贝的文件
            </summary>
        </member>
        <member name="T:ijw.Next.IO.BinaryReaderExt">
            <summary>
            BinaryReader的扩展方法
            </summary>
        </member>
        <member name="M:ijw.Next.IO.BinaryReaderExt.ReadBytes(System.IO.BinaryReader,System.Int64)">
            <summary>
            读取指定长度的二进制数据
            </summary>
            <param name="reader"></param>
            <param name="length">字节数</param>
            <returns>读取到的二进制数据数组</returns>
        </member>
        <member name="M:ijw.Next.IO.BinaryReaderExt.ReadBytes(System.IO.BinaryReader)">
            <summary>
            读取全部的二进制数据
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:ijw.Next.IO.BytesExt">
            <summary>
            
            </summary>
        </member>
        <member name="M:ijw.Next.IO.BytesExt.WriteToFile(System.Byte[],System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            写入文件
            </summary>
            <param name="content"></param>
            <param name="filename">文件名</param>
            <param name="append">是否追加模式</param>
            <param name="encoding">写入的编码</param>
        </member>
        <member name="T:ijw.Next.IO.Compression.CompressHelper">
            <summary>  
            压缩帮助类
            </summary>  
        </member>
        <member name="M:ijw.Next.IO.Compression.CompressHelper.CompressDeflate(System.String)">
            <summary>  
            Deflate压缩字符串  
            </summary>  
            <param name="str"></param>  
            <returns></returns>  
        </member>
        <member name="M:ijw.Next.IO.Compression.CompressHelper.CompressDeflate(System.Byte[])">
            <summary>  
            Deflate压缩二进制  
            </summary>  
            <param name="str"></param>  
            <returns></returns>  
        </member>
        <member name="M:ijw.Next.IO.Compression.CompressHelper.DecompressDeflate(System.Byte[])">
            <summary>  
            Deflate解压二进制  
            </summary>  
            <param name="str"></param>  
            <returns></returns>  
        </member>
        <member name="M:ijw.Next.IO.Compression.CompressHelper.CompressGZip(System.String)">
            <summary>
            GZip压缩字符串
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:ijw.Next.IO.Compression.CompressHelper.CompressGZip(System.Byte[])">
            <summary>
            GZip压缩字节数组
            </summary>
            <param name="inputBytes"></param>
        </member>
        <member name="M:ijw.Next.IO.Compression.CompressHelper.DecompressGZip(System.Byte[])">
            <summary>
            GZip解压缩字节数组
            </summary>
            <param name="inputBytes"></param>
        </member>
        <member name="M:ijw.Next.IO.Compression.CompressHelper.CompressGZip(System.IO.FileInfo)">
            <summary>
            GZip压缩文件
            </summary>
            <param name="fileToCompress"></param>
        </member>
        <member name="M:ijw.Next.IO.Compression.CompressHelper.DecompressGZip(System.IO.FileInfo)">
            <summary>
            GZip解压缩文件
            </summary>
            <param name="fileToDecompress"></param>
        </member>
        <member name="T:ijw.Next.IO.DirectoryInfoExt">
            <summary>
            
            </summary>
        </member>
        <member name="M:ijw.Next.IO.DirectoryInfoExt.GetFilesIncludeSubFolders(System.IO.DirectoryInfo)">
            <summary>
            获取当前文件夹下面的所有文件
            </summary>
            <param name="rootDirectory"></param>
            <returns>元祖序列, (子文件夹info, 相对当前文件夹的路径, 文件info)</returns>
        </member>
        <member name="M:ijw.Next.IO.DirectoryInfoExt.ForAllFiles(System.IO.DirectoryInfo,System.Action{System.IO.FileInfo})">
            <summary>
            对文件夹下面的所有文件执行指定操作
            </summary>
            <param name="directory"></param>
            <param name="action">对文件进行的指定操作</param>
        </member>
        <member name="M:ijw.Next.IO.DirectoryInfoExt.ForAllFilesRecursively(System.IO.DirectoryInfo,System.Action{System.IO.FileInfo},System.Action{System.IO.DirectoryInfo,System.Int32})">
            <summary>
            对文件夹及其所有子文件夹的文件执行指定操作
            </summary>
            <param name="directory"></param>
            <param name="action">对文件进行的指定操作</param>
            <param name="actionWhenCD">改变目录时执行的指定操作. 包括当前目录. 默认是空. 执行时将自动传递DirectoryInfo和层级序数作为参数. 以初始目录为0级.</param>
        </member>
        <member name="T:ijw.Next.IO.FileExistException">
            <summary>
            File already exist exception.
            </summary>
        </member>
        <member name="M:ijw.Next.IO.FileExistException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ijw.Next.IO.FileExistException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ijw.Next.IO.FileExistException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:ijw.Next.IO.FileInfoExt">
            <summary>
            
            </summary>
        </member>
        <member name="M:ijw.Next.IO.FileInfoExt.ReadToEnd(System.IO.FileInfo,System.Text.Encoding)">
            <summary>
            Read all content from a file.
            </summary>
            <param name="fi"></param>
            <param name="encoding">read encoding</param>
            <returns>all content</returns>
        </member>
        <member name="M:ijw.Next.IO.FileInfoExt.ReadLines(System.IO.FileInfo,System.Text.Encoding)">
            <summary>
            read each line and line number from a file.
            </summary>
            <param name="fi"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:ijw.Next.IO.FileInfoExt.IsVideo(System.IO.FileInfo)">
            <summary>
            判断文件是否是视频文件. 根据扩展名判断.
            </summary>
            <param name="fileInfo"></param>
            <returns>是视频文件, 返回true. 反之返回false.</returns>
        </member>
        <member name="M:ijw.Next.IO.FileInfoExt.ExtensionName(System.IO.FileInfo)">
            <summary>
            返回文件扩展名. 没有"."
            </summary>
            <param name="fileInfo"></param>
            <returns>文件扩展名</returns>
        </member>
        <member name="M:ijw.Next.IO.FileInfoExt.Rename(System.IO.FileInfo,System.String)">
            <summary>
            重命名
            </summary>
            <param name="fileInfo"></param>
            <param name="newName">新文件名. 没有路径.</param>
        </member>
        <member name="M:ijw.Next.IO.FileInfoExt.GetSHA1(System.IO.FileInfo)">
            <summary>
            计算文件的SHA1码
            </summary>
            <param name="fileinfo">要计算的文件</param>
            <returns>SHA1码</returns>
        </member>
        <member name="M:ijw.Next.IO.FileInfoExt.GetMD5(System.IO.FileInfo)">
            <summary>
            计算文件的SHA1码
            </summary>
            <param name="fileinfo">要计算的文件</param>
            <returns>SHA1码</returns>
        </member>
        <member name="M:ijw.Next.IO.FileInfoExt.byteArrayToHexString(System.Byte[])">
            <summary>
            字节数组转换为16进制表示的字符串
            </summary>
        </member>
        <member name="M:ijw.Next.IO.FileInfoExt.CheckSHA1(System.IO.FileInfo,System.String)">
            <summary>
            检查SHA1码是否匹配
            </summary>
            <param name="fileinfo"></param>
            <param name="sha1">指定的SHA1码</param>
            <returns></returns>
        </member>
        <member name="M:ijw.Next.IO.FileInfoExt.CheckSHA1(System.IO.FileInfo,System.String,System.String@)">
            <summary>
            检查SHA1码是否匹配
            </summary>
            <param name="fileinfo"></param>
            <param name="sha1">指定的SHA1码</param>
            <param name="sha1This">该文件的MD5码</param>
            <returns></returns>
        </member>
        <member name="M:ijw.Next.IO.FileInfoExt.CheckMD5(System.IO.FileInfo,System.String)">
            <summary>
            检查MD5码是否匹配
            </summary>
            <param name="fileinfo"></param>
            <param name="md5">指定的MD5码</param>
            <returns>是否匹配</returns>
        </member>
        <member name="M:ijw.Next.IO.FileInfoExt.CheckMD5(System.IO.FileInfo,System.String,System.String@)">
            <summary>
            检查MD5码是否匹配
            </summary>
            <param name="fileinfo"></param>
            <param name="md5">指定的MD5码</param>
            <param name="md5This">该文件的MD5码</param>
            <returns>是否匹配</returns>
        </member>
        <member name="M:ijw.Next.IO.FileInfoExt.CreateReadonlyStream(System.IO.FileInfo)">
            <summary>
            创建只读流
            </summary>
            <param name="fileInfo"></param>
            <returns>只读流</returns>
        </member>
        <member name="T:ijw.Next.IO.BinaryReaderHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:ijw.Next.IO.BinaryReaderHelper.NewBinaryReaderFromStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
            获取流读取器
            </summary>
            <param name="stream"></param>
            <param name="encoding">编码. null为系统默认编码</param>
            <returns></returns>
        </member>
        <member name="M:ijw.Next.IO.BinaryReaderHelper.NewBinaryReaderFromFileInfo(System.IO.FileInfo,System.Text.Encoding)">
            <summary>
            使用指定的编码打开指定文件.请使用using.
            </summary>
            <param name="fileinfo">文件信息</param>
            <param name="encoding">编码, null为使用默认编码</param>
            <returns>流读取器</returns>
        </member>
        <member name="M:ijw.Next.IO.BinaryReaderHelper.NewBinaryReaderFromFile(System.String,System.Text.Encoding)">
            <summary>
            使用指定的编码方式打开指定文件.请使用using.
            </summary>
            <param name="filepath">文件路径</param>
            <param name="encoding">文本编码方式</param>
            <returns>流读取器</returns>
        </member>
        <member name="T:ijw.Next.IO.BinaryWriterHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:ijw.Next.IO.BinaryWriterHelper.NewBinaryWriterToStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
            根据指定的流和编码创建StreamWriter.
            </summary>
            <param name="stream"></param>
            <param name="encoding">编码</param>
            <returns>创建的StreamWriter</returns>
        </member>
        <member name="M:ijw.Next.IO.BinaryWriterHelper.NewBinaryWriterByFilepath(System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            根据指定的文件路径和编码创建BinaryWriter.
            </summary>
            <param name="filepath">文件路径</param>
            <param name="append">是否追加模式</param>
            <param name="encoding">编码</param>
            <returns>创建的BinaryWriter</returns>
        </member>
        <member name="T:ijw.Next.IO.FileHelper">
            <summary>
            文件相关的帮助方法
            </summary>
        </member>
        <member name="M:ijw.Next.IO.FileHelper.WriteStringToFile(System.String,System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            使用指定的编码向指定的文件写入字符串,可选追加或者创建/覆盖.
            </summary>
            <param name="filepath">写入文件</param>
            <param name="content">写入的内容</param>
            <param name="append">是否追加. true为追加, false为创建或覆盖</param>
            <param name="encoding">指定的编码方法</param>
        </member>
        <member name="M:ijw.Next.IO.FileHelper.WriteBytesToFile(System.String,System.Byte[],System.Boolean,System.Text.Encoding)">
            <summary>
            使用指定的编码向指定的文件写入二进制,可选追加或者创建/覆盖.
            </summary>
            <param name="filepath">写入文件</param>
            <param name="content">写入的内容</param>
            <param name="append">是否追加. true为追加, false为创建或覆盖</param>
            <param name="encoding">指定的编码方法</param>
        </member>
        <member name="M:ijw.Next.IO.FileHelper.CopyFiles(System.String,System.String,System.String,System.IO.SearchOption,System.Boolean,System.Boolean)">
            <summary>
            按通配符拷贝多个文件.
            </summary>
            <param name="sourceDir">源文件夹</param>
            <param name="destinationDir">目标文件夹</param>
            <param name="pattern">通配符</param>
            <param name="copyOption">是否递归复制所有子目录中的文件</param>
            <param name="overwrite">是否覆盖, 设为false后遇到同名文件会抛出异常</param>
            <param name="tryHarderWhenOverwrite">true, 将会尝试重命名源文件后复制, 尽量覆盖被占用的文件.</param>
            <returns>字符串数组, 包含拷贝文件的源路径全名称</returns>
        </member>
        <member name="M:ijw.Next.IO.FileHelper.DeleteFiles(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            删除指定的文件
            </summary>
            <param name="files">文件全路径名称数组</param>
            <returns>实际删除的文件个数</returns>
        </member>
        <member name="M:ijw.Next.IO.FileHelper.DeleteFiles(System.String,System.String)">
            <summary>
            删除指定目录的所有符合通配符的文件.
            </summary>
            <param name="dir">目录名</param>
            <param name="pattern">通配符</param>
            <returns>删除的文件数量</returns>
        </member>
        <member name="M:ijw.Next.IO.FileHelper.DeleteFiles(System.String,System.TimeSpan,System.String)">
            <summary>
            删除指定文件夹下面所有指定时间之前的符合通配符的所有文件
            </summary>
            <param name="dir">指定的文件夹</param>
            <param name="olderThan">指定的时间段</param>
            <param name="pattern">通配符</param>
            <returns>实际删除的文件数量</returns>
        </member>
        <member name="T:ijw.Next.IO.StreamReaderHelper">
            <summary>
            StreamReader的帮助类
            </summary>
        </member>
        <member name="M:ijw.Next.IO.StreamReaderHelper.NewStreamReaderFromStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
            获取流读取器
            </summary>
            <param name="stream"></param>
            <param name="encoding">编码. null为系统默认编码</param>
            <returns></returns>
        </member>
        <member name="M:ijw.Next.IO.StreamReaderHelper.NewStreamReaderFromFileInfo(System.IO.FileInfo,System.Text.Encoding)">
            <summary>
            使用指定的编码打开指定文件.请使用using.
            </summary>
            <param name="fileinfo">文件信息</param>
            <param name="encoding">编码</param>
            <returns>流读取器</returns>
        </member>
        <member name="M:ijw.Next.IO.StreamReaderHelper.NewStreamReaderFromFile(System.String,System.Text.Encoding)">
            <summary>
            使用指定的编码方式打开指定文件.请使用using.
            </summary>
            <param name="filepath">文件路径</param>
            <param name="encoding">文本编码方式</param>
            <returns>流读取器</returns>
        </member>
        <member name="T:ijw.Next.IO.StreamWriterHelper">
            <summary>
            StreamWriter的帮助类
            </summary>
        </member>
        <member name="M:ijw.Next.IO.StreamWriterHelper.NewStreamWriterByFilepath(System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            根据指定的文件路径和编码创建StreamWriter.
            </summary>
            <param name="filepath">文件路径</param>
            <param name="append">是否追加模式</param>
            <param name="encoding">编码</param>
            <returns>创建的StreamWriter</returns>
        </member>
        <member name="M:ijw.Next.IO.StreamWriterHelper.NewStreamWriterToStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
            根据指定的流和编码创建StreamWriter.
            </summary>
            <param name="stream"></param>
            <param name="encoding">编码</param>
            <returns>创建的StreamWriter</returns>
        </member>
        <member name="T:ijw.Next.IO.StreamExt">
            <summary>
            扩展Stream类, 以支持一些简便的读写功能.
            </summary>
        </member>
        <member name="M:ijw.Next.IO.StreamExt.GetStreamReader(System.IO.Stream,System.Text.Encoding)">
            <summary>
            获取流读取器
            </summary>
            <param name="stream"></param>
            <param name="encoding">编码. null为系统默认编码</param>
            <returns></returns>
        </member>
        <member name="M:ijw.Next.IO.StreamExt.GetStreamWriter(System.IO.Stream,System.Text.Encoding)">
            <summary>
            获取流读取器
            </summary>
            <param name="stream"></param>
            <param name="encoding">编码. null为系统默认编码</param>
            <returns></returns>
        </member>
        <member name="M:ijw.Next.IO.StreamExt.GetBinaryReader(System.IO.Stream,System.Text.Encoding)">
            <summary>
            获取流读取器
            </summary>
            <param name="stream"></param>
            <param name="encoding">编码. null为系统默认编码</param>
            <returns></returns>
        </member>
        <member name="M:ijw.Next.IO.StreamExt.GetBinaryWriter(System.IO.Stream,System.Text.Encoding)">
            <summary>
            获取流读取器
            </summary>
            <param name="stream"></param>
            <param name="encoding">编码. null为系统默认编码</param>
            <returns></returns>
        </member>
        <member name="M:ijw.Next.IO.StreamExt.ReadStringAndDispose(System.IO.Stream,System.Text.Encoding)">
            <summary>
            使用指定的编码方式,调用StreamReader从流中读取全部的字符串
            </summary>
            <param name="stream"></param>
            <param name="encoding">编码方式</param>
            <returns>读取全部的字符串</returns>
        </member>
        <member name="M:ijw.Next.IO.StreamExt.WriteStringAndDispose(System.IO.Stream,System.String,System.Text.Encoding)">
            <summary>
            用指定编码把字符串写入流, 并Dispose流.
            </summary>
            <param name="stream"></param>
            <param name="aString">欲写入的字符串</param>
            <param name="encoding">所用的编码</param>
        </member>
        <member name="M:ijw.Next.IO.StreamExt.ReadBytesAndDispose(System.IO.Stream,System.Int64,System.Text.Encoding)">
            <summary>
            使用指定的编码方式, 调用BinaryReader从流中读取指定长度的二进制数据
            </summary>
            <param name="stream"></param>
            <param name="length">读取长度</param>
            <param name="encoding">编码方式</param>
            <returns>读取的二进制数组</returns>
        </member>
        <member name="M:ijw.Next.IO.StreamExt.ReadBytesAndDispose(System.IO.Stream,System.Text.Encoding)">
            <summary>
            使用BinaryReader用指定的编码方式从流中读取全部的二进制数据.
            </summary>
            <param name="stream"></param>
            <param name="encoding">使用的编码方式. null 为系统默认编码.</param>
            <returns>读取的字节数</returns>
        </member>
        <member name="M:ijw.Next.IO.StreamExt.WriteToTextFileAndDispose(System.IO.Stream,System.String,System.Boolean,System.Text.Encoding,System.Text.Encoding)">
            <summary>
            使用指定的编码方式调用ReadStringByStreamReader方法读取流中的全部字符串, 然后使用指定编码覆盖或者追加到指定文件.
            </summary>
            <param name="stream"></param>
            <param name="filename">写入的文件</param>
            <param name="append">是否追加. 默认是false</param>
            <param name="readEncoding">读取流用的编码</param>
            <param name="writeEncoding">写入文件的编码方式</param>
        </member>
        <member name="M:ijw.Next.IO.StreamExt.WriteToBinaryFileAndDispose(System.IO.Stream,System.String,System.Int64,System.Text.Encoding,System.Text.Encoding,System.Boolean)">
            <summary>
            使用指定的编码方式调用ReadBytesByBinaryReader方法读取流中指定长度的二进制数据, 然后使用指定编码覆盖(或追加)到指定文件.
            </summary>
            <param name="stream"></param>
            <param name="filename">写入的文件</param>
            <param name="length">读取数据字节数</param>
            <param name="readEncoding">读取流时使用的编码方式</param>
            <param name="writeEncoding">写入文件时使用的编码方式</param>
            <param name="append">是否追加. 默认是false</param>
            <returns>读取到的二进制数组</returns>
        </member>
        <member name="M:ijw.Next.IO.StreamExt.WriteToBinaryFileAndDispose(System.IO.Stream,System.String,System.Text.Encoding,System.Text.Encoding,System.Boolean)">
            <summary>
            使用指定的编码方式调用ReadBytesByBinaryReader方法读取流中的全部二进制数据, 然后使用指定编码覆盖或者追加到指定文件.
            </summary>
            <param name="stream"></param>
            <param name="filename">写入的文件</param>
            <param name="readEncoding">读取流时使用的编码方式</param>
            <param name="writeEncoding">写入文件时使用的编码方式</param>
            <param name="append">是否追加. 默认是false</param>
        </member>
        <member name="T:ijw.Next.IO.StringExt">
            <summary>
            
            </summary>
        </member>
        <member name="M:ijw.Next.IO.StringExt.AsFileInfo(System.String)">
            <summary>
            获取字符串代表的FileInfo. 
            </summary>
            <param name="filepath"></param>
            <returns>指代的FileInfo</returns>
            <remarks>即使返回有效的FileInfo, 也并不保证之后文件仍继续存在, 应考虑使用try-catch进行后续操作. </remarks>
        </member>
        <member name="M:ijw.Next.IO.StringExt.AsDirectoryInfo(System.String)">
            <summary>
            获取字符串代表的FileInfo. 
            </summary>
            <param name="path"></param>
            <returns>指代的FileInfo</returns>
            <exception cref="T:System.IO.FileNotFoundException">字符串不是有效的文件路径时, 抛出此异常. </exception>
            <remarks>即使返回有效的FileInfo, 也并不保证之后文件仍继续存在, 应考虑使用try-catch进行后续操作. </remarks>
        </member>
        <member name="M:ijw.Next.IO.StringExt.WriteToFile(System.String,System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            使用指定编码将字符串写入指定文本文件
            </summary>
            <param name="content"></param>
            <param name="filepath">写入的文件</param>
            <param name="append">是否追加, true追加, false新建或覆盖</param>
            <param name="encoding">写入使用的编码方式</param>
        </member>
        <member name="T:ijw.Next.IO.TextReaderExt">
            <summary>
            文本/字符流的扩展方法
            </summary>
        </member>
        <member name="M:ijw.Next.IO.TextReaderExt.ReadLines(System.IO.TextReader)">
            <summary>
            扩展方法, 读取流中的一行
            </summary>
            <param name="reader"></param>
            <returns>行集合</returns>
        </member>
        <member name="M:ijw.Next.IO.TextReaderExt.ReadLinesWithLineNumber(System.IO.TextReader)">
            <summary>
            读取每一行的行号与内容
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
    </members>
</doc>
