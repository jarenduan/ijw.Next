<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ijw.Next.Maths</name>
    </assembly>
    <members>
        <member name="T:ijw.Next.Maths.IFunction`2">
            <summary>
            表示输入与输出之间的函数
            </summary>
            <typeparam name="TInput">输入类型</typeparam>
            <typeparam name="TOutput">输出类型</typeparam>
        </member>
        <member name="M:ijw.Next.Maths.IFunction`2.Calculate(`0)">
            <summary>
            计算输出值，其与输入相同
            </summary>
            <param name="input">指定的输入</param>
            <returns>输出</returns>
        </member>
        <member name="T:ijw.Next.Maths.IMimoMathFunction">
            <summary>
            表示一个多输入多输出的数学函数
            </summary>
        </member>
        <member name="T:ijw.Next.Maths.ISisoMathFunction">
            <summary>
            表示一个数学函数
            </summary>
        </member>
        <member name="T:ijw.Next.Maths.ISisoMathFunctionWithDerivative">
            <summary>
            可以计算导数的数学函数
            </summary>
        </member>
        <member name="M:ijw.Next.Maths.ISisoMathFunctionWithDerivative.CalculateDerivative(System.Double)">
            <summary>
            计算指定输入的导数
            </summary>
            <param name="input">指定的输入</param>
            <returns>导数</returns>
        </member>
        <member name="T:ijw.Next.Maths.LinearFunction">
            <summary>
            线性函数
            </summary>
        </member>
        <member name="P:ijw.Next.Maths.LinearFunction.K">
            <summary>
            斜率
            </summary>
        </member>
        <member name="M:ijw.Next.Maths.LinearFunction.Calculate(System.Double)">
            <summary>
            计算输出值，其与输入相同
            </summary>
            <param name="input">指定的输入</param>
            <returns>输出</returns>
        </member>
        <member name="M:ijw.Next.Maths.LinearFunction.CalculateDerivative(System.Double)">
            <summary>
            计算导数
            </summary>
            <param name="input">指定的输入</param>
            <returns>恒等为斜率</returns>
        </member>
        <member name="T:ijw.Next.Maths.ReLUFunction">
            <summary>
            ReLU函数
            </summary>
        </member>
        <member name="M:ijw.Next.Maths.ReLUFunction.Calculate(System.Double)">
            <summary>
            计算输出值，其与输入相同
            </summary>
            <param name="input">指定的输入</param>
            <returns>输入大于0，返回输入本身，否则返回0</returns>
        </member>
        <member name="M:ijw.Next.Maths.ReLUFunction.CalculateDerivative(System.Double)">
            <summary>
            计算指定输入的导数
            </summary>
            <param name="input">指定的输入</param>
            <returns>输入大于0，返回1；反之返回0</returns>
        </member>
        <member name="T:ijw.Next.Maths.SigmodFunction">
            <summary>
            Sigmod函数
            </summary>
        </member>
        <member name="M:ijw.Next.Maths.SigmodFunction.Calculate(System.Double)">
            <summary>
            计算输出值
            </summary>
            <param name="input">指定的输入</param>
            <returns>输出, 处于(0, 1)区间</returns>
        </member>
        <member name="M:ijw.Next.Maths.SigmodFunction.CalculateDerivative(System.Double)">
            <summary>
            计算指定输入的导数
            </summary>
            <param name="input">指定的输入</param>
            <returns>导数</returns>
        </member>
        <member name="T:ijw.Next.Maths.Functions.TanHFunction">
            <summary>
            双曲正切函数
            </summary>
        </member>
        <member name="M:ijw.Next.Maths.Functions.TanHFunction.Calculate(System.Double)">
            <summary>
            计算输出值
            </summary>
            <param name="input">指定的输入,</param>
            <returns>输出，属于[-1,1]</returns>
        </member>
        <member name="M:ijw.Next.Maths.Functions.TanHFunction.CalculateDerivative(System.Double)">
            <summary>
            计算指定输入的导数
            </summary>
            <param name="input">指定的输入</param>
            <returns>导数</returns>
        </member>
        <member name="T:ijw.Next.Maths.Matrix`1">
            <summary>
            矩阵
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:ijw.Next.Maths.Matrix`1.CountOfX">
            <summary>
            列数
            </summary>
        </member>
        <member name="P:ijw.Next.Maths.Matrix`1.CountOfY">
            <summary>
            行数
            </summary>
        </member>
        <member name="P:ijw.Next.Maths.Matrix`1.Data">
            <summary>
            内部数据
            </summary>
        </member>
        <member name="M:ijw.Next.Maths.Matrix`1.#ctor(System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="countOfX"></param>
            <param name="countOfY"></param>
        </member>
        <member name="T:ijw.Next.Maths.IMimoMathModel">
            <summary>
            一个数学模型
            </summary>
        </member>
        <member name="T:ijw.Next.Maths.IMimoPredictionModel">
            <summary>
            预测模型
            </summary>
        </member>
        <member name="T:ijw.Next.Maths.IMisoMathModel">
            <summary>
            
            </summary>
        </member>
        <member name="T:ijw.Next.Maths.IMisoPredictionModel">
            <summary>
            预测模型
            </summary>
        </member>
        <member name="T:ijw.Next.Maths.IModel`2">
            <summary>
            一个输入与输出的模型
            </summary>
            <typeparam name="TInput"></typeparam>
            <typeparam name="TOutput"></typeparam>
        </member>
        <member name="P:ijw.Next.Maths.IModel`2.InputDimension">
            <summary>
            输入维度
            </summary>
        </member>
        <member name="P:ijw.Next.Maths.IModel`2.OutputDimension">
            <summary>
            输出维度
            </summary>
        </member>
        <member name="P:ijw.Next.Maths.IModel`2.Input">
            <summary>
            输入
            </summary>
        </member>
        <member name="P:ijw.Next.Maths.IModel`2.Output">
            <summary>
            输出
            </summary>
        </member>
        <member name="M:ijw.Next.Maths.IModel`2.Calculate">
            <summary>
            根据当前的输入进行计算，更新输出
            </summary>
        </member>
        <member name="T:ijw.Next.Maths.ISimoMathModel">
            <summary>
            一个数学模型
            </summary>
        </member>
        <member name="T:ijw.Next.Maths.ISimoPredictionModel">
            <summary>
            预测模型
            </summary>
        </member>
        <member name="T:ijw.Next.Maths.ISisoMathModel">
            <summary>
            
            </summary>
        </member>
        <member name="T:ijw.Next.Maths.ISisoPredictionModel">
            <summary>
            预测模型
            </summary>
        </member>
        <member name="T:ijw.Next.Maths.MimoModelBase">
            <summary>
            默认实现
            </summary>
        </member>
        <member name="P:ijw.Next.Maths.MimoModelBase.Input">
            <summary>
            输入
            </summary>
        </member>
        <member name="P:ijw.Next.Maths.MimoModelBase.Output">
            <summary>
            输出
            </summary>
        </member>
        <member name="P:ijw.Next.Maths.MimoModelBase.InputDimension">
            <summary>
            输入维度
            </summary>
        </member>
        <member name="P:ijw.Next.Maths.MimoModelBase.OutputDimension">
            <summary>
            输出维度
            </summary>
        </member>
        <member name="M:ijw.Next.Maths.MimoModelBase.#ctor(System.Int32,System.Int32)">
            <summary>
            使用数组实现的构造函数
            </summary>
            <param name="inputDimension"></param>
            <param name="outputDimension"></param>
        </member>
        <member name="M:ijw.Next.Maths.MimoModelBase.Calculate">
            <summary>
            根据当前的输入进行计算，更新输出
            </summary>
        </member>
        <member name="T:ijw.Next.Maths.IMOPredictionModel">
            <summary>
            预测模型
            </summary>
        </member>
        <member name="P:ijw.Next.Maths.IMOPredictionModel.DesireOutput">
            <summary>
            期望输出
            </summary>
        </member>
        <member name="T:ijw.Next.Maths.IPredictionModel">
            <summary>
            预测模型
            </summary>
        </member>
        <member name="M:ijw.Next.Maths.IPredictionModel.GetError">
            <summary>
            计算绝对误差
            </summary>
            <returns></returns>
        </member>
        <member name="M:ijw.Next.Maths.IPredictionModel.GetRelativeError">
            <summary>
            计算相对误差
            </summary>
            <returns></returns>
        </member>
        <member name="T:ijw.Next.Maths.ISOPredictionModel">
            <summary>
            预测模型
            </summary>
        </member>
        <member name="P:ijw.Next.Maths.ISOPredictionModel.DesireOutput">
            <summary>
            期望输出
            </summary>
        </member>
        <member name="T:ijw.Next.Maths.TargetFunctionAdapter">
            <summary>
             目标函数包装器, 其内部包裹了一个更高维的模型, 把输入维度降低, 把输出维度降为1维
             把多目标函数转换成单目标函数, 使调用者认为就是在使用一个单输出的模型. 每个包装器对应一个特定FullInput.
            </summary>
        </member>
        <member name="P:ijw.Next.Maths.TargetFunctionAdapter.InputDimension">
            <summary>
            输入维度. 包装后的维度.
            </summary>
        </member>
        <member name="P:ijw.Next.Maths.TargetFunctionAdapter.OutputDimension">
            <summary>
            
            </summary>
        </member>
        <member name="P:ijw.Next.Maths.TargetFunctionAdapter.Input">
            <summary>
            模型的输入, 缩减维度的之后的输入
            </summary>
        </member>
        <member name="P:ijw.Next.Maths.TargetFunctionAdapter.FullInput">
            <summary>
            模型输入, 原维度的输入
            </summary>
        </member>
        <member name="P:ijw.Next.Maths.TargetFunctionAdapter.Output">
            <summary>
            输出
            </summary>
        </member>
        <member name="P:ijw.Next.Maths.TargetFunctionAdapter.ToOneResult">
            <summary>
            合并多个输出为一个的计算函数委托. 默认算法是直接输出(内部函数单输出)或求和(内部函数多输出).
            如果有自定义的算法或者需要添加罚函数, 请设置此委托.
            输入参数是内部模型计算后的各个维度的输出.
            </summary>
        </member>
        <member name="M:ijw.Next.Maths.TargetFunctionAdapter.#ctor(ijw.Next.Maths.IMimoMathModel,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            构造函数
            </summary>
            <param name="actualFunction">被包装的真实函数</param>
            <param name="targetVarableIndexes">想最终暴露出来的输入索引,注意, 不要重复</param>
            <param name="fullinput">完整的输入</param>
        </member>
        <member name="M:ijw.Next.Maths.TargetFunctionAdapter.Calculate">
            <summary>
            调用内部真实函数进行计算
            </summary>
        </member>
        <member name="F:ijw.Next.Maths.TargetFunctionAdapter._model">
            <summary>
            
            </summary>
        </member>
        <member name="F:ijw.Next.Maths.TargetFunctionAdapter._targetParameterIndexs">
            <summary>
            
            </summary>
        </member>
        <member name="T:ijw.Next.Maths.VectorDoubleStruct">
            <summary>
            向量值类型
            </summary>
        </member>
        <member name="F:ijw.Next.Maths.VectorDoubleStruct.Dimension">
            <summary>
            维度
            </summary>
        </member>
        <member name="F:ijw.Next.Maths.VectorDoubleStruct.Data">
            <summary>
            内部数据
            </summary>
        </member>
        <member name="M:ijw.Next.Maths.VectorDoubleStruct.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="dimension"></param>
        </member>
        <member name="M:ijw.Next.Maths.VectorDoubleStruct.ToString">
            <summary>
            字符串表示
            </summary>
            <returns>字符串</returns>
        </member>
    </members>
</doc>
